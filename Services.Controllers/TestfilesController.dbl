;;*****************************************************************************
;;
;; Title:       TestfilesController.dbl
;;
;; Description: OData controller for the TESTFILE structure.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.JsonPatch
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Routing
import Microsoft.EntityFrameworkCore
import Microsoft.EntityFrameworkCore.Infrastructure
import Microsoft.Extensions.Options
import System.ComponentModel.DataAnnotations
import Harmony.Core.EF.Extensions
import Harmony.Core.Interface
import Harmony.OData
import Newtonsoft.Json
import Services.Models

namespace Services.Controllers

    {ApiVersion("1")}
    ;;; <summary>
    ;;; OData controller for Testfiles
    ;;; </summary>
    public partial class TestfilesController extends ODataController
    
        ;;Services provided via dependency injection
        private _DbContext, @Services.Models.DBContext
        private _ServiceProvider, @IServiceProvider
        private _AppSettings, @IOptions<AppSettings>

        ;;; <summary>
        ;;; Constructs a new instance of TestfilesController
        ;;; </summary>
        ;;; <param name="aDbContext">Database context instance (DI)</param>
        ;;; <param name="aServiceProvider">Service provider instance (DI)</param>
        ;;; <param name="aAppSettings">Application settings</param>
        public method TestfilesController
            aDbContext, @Services.Models.DBContext
            aServiceProvider, @IServiceProvider
            aAppSettings, @IOptions<AppSettings>
        proc
            this._DbContext = aDbContext
            this._ServiceProvider = aServiceProvider
            this._AppSettings = aAppSettings
        endmethod

        {ODataRoute("Testfiles")}
        {EnableQuery(MaxExpansionDepth=4)}
        ;;; <summary>
        ;;; Get all Testfiles
        ;;; </summary>
        ;;; <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
        public method GetTestfiles, @IActionResult
        proc
            mreturn Ok(_DbContext.Testfiles.AsNoTracking())
        endmethod

        {ODataRoute("Testfiles(Id={aId})")}
        {EnableQuery(MaxExpansionDepth=4)}
        ;;; <summary>
        ;;; Get a single Testfile by primary key.
        ;;; </summary>
        ;;; <param name="aId">ID</param>
        ;;; <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
        public method GetTestfile, @SingleResult<Testfile>
            {FromODataUri}
            required in aId, int
        proc
            mreturn new SingleResult<Testfile>(_DbContext.Testfiles.AsNoTracking().FindQuery<Testfile>(_DbContext, aId))
        endmethod

    endclass

endnamespace